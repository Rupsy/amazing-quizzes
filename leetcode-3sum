Problem: Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Link to the problem: https://leetcode.com/problems/3sum/

Solution : 
## Example
arr = [-1,0,1,2,-1,-4]
## sort the array
arr.sort()

r = len (arr)-1
i = 0
ans = []
while i < len (arr):
    compliment = 0 -(arr[i])

    r = len (arr)-1
    l = i+1
    while l <r :

        if   arr[l] + arr[r] > compliment :
            r = r -1

        elif arr[l] + arr[r] < compliment:
            l = l +1

        else:
            ans.append(arr[i] )
            ans.append( arr[l] )
            ans.append( arr[r])

            break;
    i = i +1

print(ans)
