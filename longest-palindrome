Problem : https://leetcode.com/problems/longest-palindrome/

Description: Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.

Letters are case sensitive, for example, "Aa" is not considered a palindrome here.


Example: Input: s = "abccccdd"
Output: 7
Explanation: One longest palindrome that can be built is "dccaccd", whose length is 7.

Solution:

def longestPalin( S):
    # code here
    str = ""
    longest_str = ""
    if len(S) == 1:
        return S
    for a in range(len(S)  ):
        str = ""
        print("##")

        str = str + S[a]
        for b in range( a +1 , len(S)  ):
            str = str +  S[b]
            print ("!!!",str)
            if isPalin(str) and len(str) > len(longest_str):
                longest_str = str
                print ("@@@",longest_str)

    return longest_str
def isPalin( s):
    str = ""
    l = len(s)
    for i in range(l -1 , -1 , -1):
        str = str + s[i]

        if s == str:
            return True

print(longestPalin("ac"))
